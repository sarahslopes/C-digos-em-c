#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <string.h>

    struct cliente
    {
      char codigo[5];
      char nome[50];
      char CPF[15];
      char telefone[15];
      char endereco[50];
  };

    struct cliente ficha;


    struct conta
    {
      char agencia[5];
      char conta[9];
      char cliente[50];
      char saldo[10];
  };

     struct conta dados;


FILE* p;
FILE* c;
char letra, letra2, letra3;
char menu_1();
char menu_2(cliente);
char menu_3();
char cadastro(cliente);
char listar_cliente(cliente);
char buscar_cliente(cliente);
char atualizar_cliente(cliente);
char menu_4(cliente);
char listar_contas(conta);
char cadastro_contas();
char listar_contascliente();
char saque_conta();
char deposito_conta();
char transferencia_conta();
char extrato_conta();


char menu_1(){ //menu principal

    printf("=============== Bem vindo! =================\n");
    printf("Digite um comando para prosseguir:\n");
    printf("C – Gerenciar Clientes\n");
    printf("T – Gerenciar Contas\n");
    printf("S - Sair\n");

    do{
        scanf("%c", &letra);

        switch(letra)
    {

        case 'C'://GERENCIAR CLIENTES
            menu_2();
            break;

        case 'T':
            menu_3();//GERENCIAR CONTAS
            break;

        default://ENCERRA PROGRAMA
            break;

    }

    } while(letra != 'S');{
            //return ;
    }

}

char menu_2(char cliente){ //cadastro cliente


    printf("============ Gerenciar Clientes ============\n");
    printf("Digite um comando para prosseguir:\n");
    printf("C – Cadastrar um cliente\n");
    printf("L – Listar todos os clientes cadastrados\n");
    printf("B – Buscar cliente já cadastrado\n");
    printf("A – Atualizar um cliente cadastrado\n");
    printf("E – Excluir um cliente cadastrado\n");
    printf("S – Sair\n");

    do{

        scanf("%c", &letra2);

        switch(letra2)

    {
        case 'C':
            cadastro();//CADASTRAR CLIENTE
            break;

        case 'L':
            listar_cliente(cliente);
            break;

        case 'B':
            buscar_cliente(cliente);
            break;

        case 'S':
            menu_1();//VOLTAR AO MENU 1
            break;

        case 'A':
            menu_4(cliente);//ATUALIZAR CLIENTE
            break;

        case 'E':
        //excluir_cliente(clientes);

        default:
            break;

        }
    }while(letra2 != 'S');{
          return 1;
    }

}


char menu_3(){ //cadastro conta

    printf("Digite um comando para prosseguir:\n");
    printf("R – Listagem de todas as contas cadastradas.\n");
    printf("C – Cadastrar uma conta para um cliente\n");
    printf("L – Listar todas as contas de um cliente\n");
    printf("W – Realizar um saque em uma conta\n");
    printf("D – Realizar um depósito em uma conta.\n");
    printf("T – Realizar transferência entre contas\n");
    printf("E – Exibir extrato de uma conta\n");
    printf("S – Sair\n");

    do{
        scanf("%c", &letra3);

            switch(letra3)
            {
                case 'R':
                    listar_contas();
                    break;

                case 'C':
                    cadastro_contas();
                    break;

                case 'L':
                    listar_contascliente();
                    break;

                case 'W':
                    saque_conta();
                    break;

                case 'D':
                    deposito_conta();
                    break;

                case 'T':
                    transferencia_conta();
                    break;

                case 'E':
                    extrato_conta();
                    break;

                case 'S':
                    menu_1();
                    break;

                default:
                    break;

            }

        }while(letra != 'S');{
            return 1;
        }
    }

char menu_4(char cliente){ //opçoes atualizar
    FILE* p;

    char OP;
    char ncodigo[4];
    char nCPF[15];

    printf("Digite o 1 para pesquisar cliente pelo código e 2 para pesquisar pelo CPF/CNPJ:\n");
    scanf("%s", &OP);

    switch(OP){

        case '1':
            printf("Digite o código:\n");
            scanf("%s", &ncodigo);
            atualizar_cliente(cliente);

            break;


        case '2':
            printf("Digite o CPF/CNPJ:\n");
            scanf("%s", &nCPF);
            atualizar_cliente(cliente);

            break;


        default:
            printf("Opção invalida!");
            break;

        }

    }


char cadastro(char cliente){

    FILE* p;

    p = fopen("dados.dat", "ab");

    char clientes[100];

    if(p == NULL){
        printf("Erro na abertura do arquivo!");
        return 1;

    } else{
        do{

        printf("Informe os dados do cliente:\n");
        printf("Código de 4 dígitos:\n");
        scanf("%s", &ficha.codigo);
        printf("Nome:\n");
        scanf("%s", &ficha.nome);
        printf("CNPJ/CPF:\n");
        scanf("%s", &ficha.CPF);
        printf("Telefone:\n");
        scanf("%s", &ficha.telefone);
        printf("Endereço:\n");
        scanf("%s", &ficha.endereco);

        fwrite(clientes, 1 , sizeof(cliente) , p);

//fprintf(p, "\n%s\n %s\n %s\n %s\n %s\n " , ficha.codigo, ficha.nome, ficha.CPF, ficha.telefone, ficha.endereco);

    }


        while(letra == 'S');{
            fclose(p);
    }

  }

}


char listar_cliente(cliente){

    int i=0;

    FILE* p = fopen("dados.dat", "rb");

    if(!p){
        printf("Nenhum cliente cadastrado!\n");
        return menu_1();
    }

    fread(&cliente,sizeof(cliente),1,p);

    while(!feof(p)){
        i++;
        printf("\nListagem de clientes cadastrados:\n");
        printf("Código:%s\n",ficha.codigo);
        printf("Nome:%s\n",ficha.nome);
        printf("CPF/CNPJ:%s\n",ficha.CPF);
        printf("Telefone:%s\n",ficha.telefone);
        printf("Endereço:%s\n",ficha.endereco);
        printf("%d", i);// QUANTIDADE DE STRUCTS LIDAS

        fread(&cliente,sizeof(cliente),1,p);

        if(feof(p) || (i == 100)){
            break;
            getchar();
        }
    }
    fclose(p);

}



char buscar_cliente(char cliente){

char n[5];

    fread(&ficha,sizeof(cliente),1,p);

    scanf("%s", &n);

    while(!feof(p)){
        if(strcmp(ficha.codigo, n)){
            fseek(p,sizeof(cliente),SEEK_CUR);
            return 1;
        }
    fread(&ficha,sizeof(cliente),1,p);
    }
    return 0;

    fclose(p);
}



char atualizar_cliente(cliente){

    int i =1;
    int id =0;

     FILE* p = fopen("dados.dat", "rb+");

     if(p){
     while(fread(&ficha, sizeof(cliente), 1, p)){
        printf("\nListagem de clientes cadastrados:\n");
        printf("Código:%s\n",ficha.codigo);//PROBLEMAS IMPPRIMIR CODIGO
        printf("Nome:%s\n",ficha.nome);
        printf("CPF/CNPJ:%s\n",ficha.CPF);
        printf("Telefone:%s\n",ficha.telefone);
        printf("Endereço:%s\n",ficha.endereco);
        printf("%d",i);
        i++;

     }

        printf("\nDigite o indice do contato que deseja alterar:\n");
        scanf("%d", &id);
        getchar();
        id--;

        if(id>=0 && id < i -1){
         printf("Informe os dados do cliente:\n");
         printf("Código de 4 dígitos:\n");
         scanf("%s", ficha.codigo);
         printf("Nome:\n");
         scanf("%s", ficha.nome);
         printf("CNPJ/CPF:\n");
         scanf("%s", ficha.CPF);
         printf("Telefone:\n");
         scanf("%s", ficha.telefone);
         printf("Endereço:\n");
         scanf("%s", ficha.endereco);

        fseek(p, id * sizeof(cliente),SEEK_SET);
        fwrite(&ficha, sizeof(cliente), 1, p);

    }

        fclose(p);

     }else
        printf("Nenhum cliente cadastrado.\n");

        menu_1();
    }






char listar_contas(conta){

    FILE* c;

    c = fopen("contas.dat", "rb");

    int i =0;

    if(!c){
        printf("Nenhuma conta cadastrada!\n");
        return menu_1();

  }else{
        while(fread(&dados, sizeof(conta), 1, c));
    {

    printf("\nListagem de contas cadastrados:\n");
    printf("Agencia:%s",dados.agencia);//PROBLEMAS IMPPRIMIR CODIGO
    printf("Conta:%s\n",dados.conta);
    printf("Cliente:%s\n",dados.cliente);
    printf("Saldo:%s\n",dados.saldo);
    i++;

    }
  }

    fclose(p);
    menu_1();
}


char cadastro_contas(cliente, conta){

    FILE* c;

    c = fopen("contas.dat", "ab");

    if(!c){
        printf("Erro na abertura do arquivo!");
        return menu_1();

    } else{
        do{
        //buscar_cliente(cliente);
      //  verifica_conta(conta);

        printf("Digite a agência:\n");
        scanf("%s", &dados.agencia);
        printf("Digite o número da conta:\n");
        scanf("%s", &dados.conta);
        printf("Digite o nome do cliente:\n");
        scanf("%s", &dados.cliente);
        printf("Digite o saldo em conta:\n");
        scanf("%s", &dados.saldo);

        fprintf(c, "%s\n%s\n%s\n%s\n" ,dados.agencia, dados.conta, dados.cliente, dados.saldo);

    }
        while(letra == 'S');{
            fclose(c);
            getchar();
    }

  }

    menu_1();
}



char listar_contascliente(){

        menu_1();
}

char saque_conta(){

    menu_1();
}

char deposito_conta(){

    menu_1();
}

char transferencia_conta(){

    menu_1();
}

char extrato_conta(){

    menu_1();
}



int main(){

    menu_1();

}

